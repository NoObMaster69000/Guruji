"""Initial migration with all tables

Revision ID: b428cc0c0c27
Revises: 
Create Date: 2025-09-21 23:53:07.117813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b428cc0c0c27'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_registry',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_registry_email'), 'user_registry', ['email'], unique=True)
    op.create_index(op.f('ix_user_registry_username'), 'user_registry', ['username'], unique=True)
    op.create_table('chat_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_session_id'), 'chat_sessions', ['session_id'], unique=True)
    op.create_table('custom_tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('code', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_custom_tools_id'), 'custom_tools', ['id'], unique=False)
    op.create_index(op.f('ix_custom_tools_name'), 'custom_tools', ['name'], unique=False)
    op.create_table('database_connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('db_type', sa.String(), nullable=True),
    sa.Column('host', sa.String(), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_database_connections_id'), 'database_connections', ['id'], unique=False)
    op.create_index(op.f('ix_database_connections_name'), 'database_connections', ['name'], unique=False)
    op.create_table('knowledge_bases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('kb_name', sa.String(), nullable=True),
    sa.Column('vector_store', sa.String(), nullable=True),
    sa.Column('allowed_file_types', sa.JSON(), nullable=True),
    sa.Column('parsing_library', sa.String(), nullable=True),
    sa.Column('chunking_strategy', sa.String(), nullable=True),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('metadata_strategy', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_id'), 'knowledge_bases', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_bases_kb_name'), 'knowledge_bases', ['kb_name'], unique=False)
    op.create_table('model_provider_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('temperature', sa.Integer(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=False),
    sa.Column('timeout', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_model_provider_settings_id'), 'model_provider_settings', ['id'], unique=False)
    op.create_table('prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompts_id'), 'prompts', ['id'], unique=False)
    op.create_index(op.f('ix_prompts_name'), 'prompts', ['name'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('agent_used', sa.String(), nullable=True),
    sa.Column('tool_calls', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.session_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_registry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_prompts_name'), table_name='prompts')
    op.drop_index(op.f('ix_prompts_id'), table_name='prompts')
    op.drop_table('prompts')
    op.drop_index(op.f('ix_model_provider_settings_id'), table_name='model_provider_settings')
    op.drop_table('model_provider_settings')
    op.drop_index(op.f('ix_knowledge_bases_kb_name'), table_name='knowledge_bases')
    op.drop_index(op.f('ix_knowledge_bases_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_index(op.f('ix_database_connections_name'), table_name='database_connections')
    op.drop_index(op.f('ix_database_connections_id'), table_name='database_connections')
    op.drop_table('database_connections')
    op.drop_index(op.f('ix_custom_tools_name'), table_name='custom_tools')
    op.drop_index(op.f('ix_custom_tools_id'), table_name='custom_tools')
    op.drop_table('custom_tools')
    op.drop_index(op.f('ix_chat_sessions_session_id'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_user_registry_username'), table_name='user_registry')
    op.drop_index(op.f('ix_user_registry_email'), table_name='user_registry')
    op.drop_table('user_registry')
    # ### end Alembic commands ###
